//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OSBIDE.Data.SQLDatabase.Edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OsbideProcs : DbContext
    {
        public OsbideProcs()
            : base("name=OsbideProcs")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetEventLogs_Result> GetActivityFeeds(Nullable<System.DateTime> dateReceivedMin, Nullable<System.DateTime> dateReceivedMax, string eventLogIds, string eventTypes, Nullable<int> courseId, Nullable<int> roleId, string senderIds, Nullable<int> minLogId, Nullable<int> maxLogId, Nullable<int> offsetN, Nullable<int> topN)
        {
            var dateReceivedMinParameter = dateReceivedMin.HasValue ?
                new ObjectParameter("DateReceivedMin", dateReceivedMin) :
                new ObjectParameter("DateReceivedMin", typeof(System.DateTime));
    
            var dateReceivedMaxParameter = dateReceivedMax.HasValue ?
                new ObjectParameter("DateReceivedMax", dateReceivedMax) :
                new ObjectParameter("DateReceivedMax", typeof(System.DateTime));
    
            var eventLogIdsParameter = eventLogIds != null ?
                new ObjectParameter("EventLogIds", eventLogIds) :
                new ObjectParameter("EventLogIds", typeof(string));
    
            var eventTypesParameter = eventTypes != null ?
                new ObjectParameter("EventTypes", eventTypes) :
                new ObjectParameter("EventTypes", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var senderIdsParameter = senderIds != null ?
                new ObjectParameter("SenderIds", senderIds) :
                new ObjectParameter("SenderIds", typeof(string));
    
            var minLogIdParameter = minLogId.HasValue ?
                new ObjectParameter("MinLogId", minLogId) :
                new ObjectParameter("MinLogId", typeof(int));
    
            var maxLogIdParameter = maxLogId.HasValue ?
                new ObjectParameter("MaxLogId", maxLogId) :
                new ObjectParameter("MaxLogId", typeof(int));
    
            var offsetNParameter = offsetN.HasValue ?
                new ObjectParameter("OffsetN", offsetN) :
                new ObjectParameter("OffsetN", typeof(int));
    
            var topNParameter = topN.HasValue ?
                new ObjectParameter("TopN", topN) :
                new ObjectParameter("TopN", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogs_Result>("GetActivityFeeds", dateReceivedMinParameter, dateReceivedMaxParameter, eventLogIdsParameter, eventTypesParameter, courseIdParameter, roleIdParameter, senderIdsParameter, minLogIdParameter, maxLogIdParameter, offsetNParameter, topNParameter);
        }
    
        public virtual ObjectResult<GetRecentCompileErrors_Result> GetRecentCompileErrors(Nullable<int> senderId, Nullable<System.DateTime> timeframe)
        {
            var senderIdParameter = senderId.HasValue ?
                new ObjectParameter("SenderId", senderId) :
                new ObjectParameter("SenderId", typeof(int));
    
            var timeframeParameter = timeframe.HasValue ?
                new ObjectParameter("Timeframe", timeframe) :
                new ObjectParameter("Timeframe", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRecentCompileErrors_Result>("GetRecentCompileErrors", senderIdParameter, timeframeParameter);
        }
    }
}
